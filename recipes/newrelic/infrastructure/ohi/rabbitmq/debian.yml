name: rabbitmq-open-source-integration
displayName: RabbitMQ Open Source Integration
description: New Relic install recipe for default RabbitMQ Open Source on-host integration (via Infra-Agent)
repository: https://github.com/newrelic/nri-rabbitmq

installTargets:
  - type: host
    os: linux
    platform: "debian"
  - type: host
    os: linux
    platform: "ubuntu"

# keyword convention for dealing with search terms that could land someone on this instrumentation project
keywords:
  - Infrastructure
  - Integration
  - rabbitmq
# CLI runs process detection; this is used to filter recipes that are appropriate for matched processes

processMatch:
  - rabbitmq
# Matches partial list of the Log forwarding parameters
logMatch:
  - name: Logs
    file: /var/log/rabbitmq/rabbit.log

validationNrql: "SELECT count(*) from RabbitmqVhostSample where hostname like '{{.HOSTNAME}}%' FACET entityGuid SINCE 10 minutes ago"

inputVars:
  - name: "NR_CLI_USERNAME"
    prompt: "RabbitMQ Username"
  - name: "NR_CLI_PASSWORD"
    prompt: "RabbitMQ Password"
  - name: "NR_CLI_SSL"
    prompt: "Use SSL to connect? (true/false)"
  - name: "NR_CLI_PORT"
    prompt: "Rabbit MQ Port (default: 15672)"
    default: 15672
  - name: "NR_CLI_HOSTNAME"
    prompt: "RabbitMQ hostname (default: localhost)"
    default: "localhost"
  - name: "NR_CLI_RABBIT_CONFIG_PATH"
    prompt: "Please enter your RabbitMQ Configuration File Path"
  - name: "NR_CLI_QUEUES"
    prompt: "Please enter a comma separated list of the queue names you'd like to collect data from:"
  - name: "NR_CLI_EXCHANGES"
    prompt: "If desired, please enter a comma separated list of the exchanges you'd like to collect data from:"
  - name: NR_CLI_VHOST
    prompt: "if desired, please enter a comma separated list of the Vhosts you'd like to collect data from:"
  - name: "NR_CLI_API_CA_BUNDLE_DIR"
    prompt: "SSL certificate Directory (if applicable)"
  - name: "NR_CLI_API_CA_BUNDLE_FILE"
    prompt: "SSL Certificate File (if applicable)"

install:
  version: "3"
  silent: true
  tasks:
    default:
      cmds:
        - taks: assert_pre_req
        - task: setup

    assert_pre_req:
      cmds:
        - |
          SERVICE_EXIST=$(sudo systemctl status newrelic-infra.service | grep "Active" | wc -l)
          if [ $SERVICE_EXIST -eq 0 ]; then
            echo "The newrelic-infra agent service is NOT installed on the host, but is required to install this integration." >> /dev/stderr
            exit 1
          fi

    setup:
      label: "Installing rabbitmq integration..."
      cmds:
        - |
          sudo mkdir -p "/etc/newrelic-infra/integrations.d"
        - |
          sudo apt-get update -y
        - |
          sudo apt-get install nri-rabbitmq -y
        - |
          if [ -f /etc/newrelic-infra/integrations.d/rabbitmq-config.yml ]; then
            sudo rm /etc/newrelic-infra/integrations.d/rabbitmq-config.yml;
          fi
          sudo touch /etc/newrelic-infra/integrations.d/rabbitmq-config.yml;
        - |
          if [ {{.NR_CLI_SSL}} == false ]; then
            sudo tee -a /etc/newrelic-infra/integrations.d/rabbitmq-config.yml > /dev/null <<"EOT"
          integration_name: com.newrelic.rabbitmq
          instances:
            - name: rabbitmq
              command: all
              arguments:
                      hostname: {{.NR_CLI_HOSTNAME}}
                      port: {{.NR_CLI_PORT}}
                      username: {{.NR_CLI_USERNAME}}
                      password: {{.NR_CLI_PASSWORD}}
                      queues: '["{{.NR_CLI_QUEUES}}"]'
                      config_path: {{.NR_CLI_RABBIT_CONFIG_PATH}}
                      queues_regexes: 
                      exchanges: '["{{.NR_CLI_EXCHANGES}}"]'
                      exchanges_regexes:
                      vhosts: '["{{.NR_CLI_VHOST}}"]'
                      vhosts_regexes: 
          EOT
          else
            sudo tee -a /etc/newrelic-infra/integrations.d/rabbitmq-config.yml > /dev/null <<"EOT"
          integration_name: com.newrelic.rabbitmq
          instances:
            - name: rabbitmq
              command: all
              arguments:
                      hostname: {{.NR_CLI_HOSTNAME}}
                      port: {{.NR_CLI_PORT}}
                      username: {{.NR_CLI_USERNAME}}
                      password: {{.NR_CLI_PASSWORD}}
                      ca_bundle_dir: {{.NR_CLI_BUNDLE_DIR}}
                      ca_bundle_file: {{.NR_CLI_BUNDLE_FILE}}
                      use_ssl: {{.NR_CLI_USE_SSL}}
                      config_path: {{.NR_CLI_RABBIT_CONFIG_PATH}}
                      queues: '["{{.NR_CLI_QUEUES}}"]'
                      queues_regexes:
                      exchanges: '["{{.NR_CLI_EXCHANGES}}"]'
                      exchanges_regexes:
                      vhosts: '["{{.NR_CLI_VHOST}}"]'
                      vhosts_regexes:
          EOT
          fi
        - sudo systemctl restart newrelic-infra.service
